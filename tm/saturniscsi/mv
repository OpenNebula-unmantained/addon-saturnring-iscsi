#!/bin/bash
#Copyright 2015 Blackberry Limited
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


#Credits - parts of this code picked up from https://github.com/OpenNebula/addon-iscsi

SRC=$1
DST=$2

VMID=$3
DSID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON

DRIVER_PATH=$(dirname $0)

source ${DRIVER_PATH}/../../datastore/saturniscsi/commonsaturniscsi

#-------------------------------------------------------------------------------
# Return if moving a disk, we will move them when moving the whole system_ds
# directory for the VM
#-------------------------------------------------------------------------------
SRC_PATH=`arg_path $SRC`
DST_PATH=`arg_path $DST`

SRC_HOST=`arg_host $SRC`
DST_HOST=`arg_host $DST`

DST_DIR=`dirname $DST_PATH`

if [ `is_disk $SRC_PATH` -eq 0 ]; then
    ssh_make_path $DST_HOST $DST_DIR

    log "Moving $SRC to $DST"

    exec_and_log "$SCP -r $SRC $DST" "Could not copy $SRC to $DST"

    ssh_exec_and_log "$SRC_HOST" "rm -rf $SRC_PATH" \
        "Could not remove $SRC_HOST:$SRC_PATH"

	exit 0
fi

if [ "$SRC" == "$DST" ]; then
    log "Not moving $SRC to $DST, they are the same path"
	exit 0
fi
#-------------------------------------------------------------------------------
# Get image information
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

DISK_ID=$(echo "$SRC_PATH" | $AWK -F. '{print $NF}')

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VMID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/PERSISTENT)

SOURCE="${XPATH_ELEMENTS[j++]}"
IQN=$(SplitA "$SOURCE" "-_-_-")
PERSISTENT="${XPATH_ELEMENTS[j++]}"

if [ -z "$PERSISTENT" ]; then
    IQN=$IQN-$VMID
fi

#-------------------------------------------------------------------------------
# Start actions
#-------------------------------------------------------------------------------

LOGOUT_CMD=$(cat <<EOF
        set -e
        $SUDO $(iscsiadm_logout "$IQN")
EOF
)
ssh_exec_and_log "$SRC_HOST" "$LOGOUT_CMD" \
   "Error logging out $SRC_HOST:$SRC_PATH ($IQN)"

TARGET_HOST=$(SplitB "$SOURCE" "-_-_-")

LINK_CMD=$(cat <<EOF
  set -e

  # discover and login
  mkdir -p $DST_DIR
  $SUDO $(iscsiadm_discovery "$TARGET_HOST")
  $SUDO $(iscsiadm_login "$IQN" "$TARGET_HOST")

    # poll
    while [ ! -L /dev/disk/by-path/*$IQN-lun-0 ]; do
        sleep 1
    done

    # link
    DISK_BY_PATH=\$(ls /dev/disk/by-path/*$IQN-lun-0)
    ln -sf "\$DISK_BY_PATH" "$DST_PATH"
EOF
)

ssh_exec_and_log "$DST_HOST" "$LINK_CMD" \
    "Error linking to $DISK_BY_PATH $DST_PATH"

exit 0
